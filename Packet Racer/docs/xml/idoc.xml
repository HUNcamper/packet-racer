<members>
  <Cable>
    <signature>Cable</signature>
    <childcount>14</childcount>
    <type>Class</type>
    <name>Cable</name>
    <token>public class Cable : MonoBehaviour </token>
    <scope></scope>
  </Cable>
  <Cable.startRouter>
    <signature>Cable.startRouter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>startRouter</name>
    <token>public Router startRouter </token>
    <scope>Cable</scope>
  </Cable.startRouter>
  <Cable.endRouter>
    <signature>Cable.endRouter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>endRouter</name>
    <token>public Router endRouter </token>
    <scope>Cable</scope>
  </Cable.endRouter>
  <Cable.ready>
    <signature>Cable.ready</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>ready</name>
    <token>public bool ready </token>
    <scope>Cable</scope>
  </Cable.ready>
  <Cable.ConnectInterface_x0028_NetInterface_x0029_>
    <signature>Cable.ConnectInterface(NetInterface)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ConnectInterface</name>
    <token>public void ConnectInterface(NetInterface netInterface)</token>
    <scope>Cable</scope>
    <params>
      <netInterface>NetInterface</netInterface>
    </params>
  </Cable.ConnectInterface_x0028_NetInterface_x0029_>
  <Cable.DisconnectInterface_x0028_NetInterface_x0029_>
    <signature>Cable.DisconnectInterface(NetInterface)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>DisconnectInterface</name>
    <token>public void DisconnectInterface(NetInterface netInterface)</token>
    <scope>Cable</scope>
    <comments>
      <summary>Initiate to disconnect from NetInterface</summary>
      <param-netInterface>NetInterface to disconnect from</param-netInterface>
    </comments>
    <params>
      <netInterface>NetInterface</netInterface>
    </params>
  </Cable.DisconnectInterface_x0028_NetInterface_x0029_>
  <Cable.InterfaceDisconnected_x0028_NetInterface_x0029_>
    <signature>Cable.InterfaceDisconnected(NetInterface)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>InterfaceDisconnected</name>
    <token>public void InterfaceDisconnected(NetInterface netInterface)</token>
    <scope>Cable</scope>
    <comments>
      <summary>NetInterface initiated to disconnect</summary>
      <param-netInterface>NetInterface calling the disconnection</param-netInterface>
    </comments>
    <params>
      <netInterface>NetInterface</netInterface>
    </params>
  </Cable.InterfaceDisconnected_x0028_NetInterface_x0029_>
  <Cable.Ready_x0028__x0029_>
    <signature>Cable.Ready()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Ready</name>
    <token>public void Ready()</token>
    <scope>Cable</scope>
  </Cable.Ready_x0028__x0029_>
  <Cable.HandlePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
    <signature>Cable.HandlePacket(NetInterface, Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>HandlePacket</name>
    <token>public void HandlePacket(NetInterface sourceInterface, Packet packet)</token>
    <scope>Cable</scope>
    <params>
      <sourceInterface>NetInterface</sourceInterface>
      <packet>Packet</packet>
    </params>
  </Cable.HandlePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
  <CameraController>
    <signature>CameraController</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>CameraController</name>
    <token>public class CameraController : MonoBehaviour </token>
    <scope></scope>
  </CameraController>
  <CameraController.sensitivityH>
    <signature>CameraController.sensitivityH</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sensitivityH</name>
    <token>public float sensitivityH </token>
    <scope>CameraController</scope>
  </CameraController.sensitivityH>
  <CameraController.sensitivityV>
    <signature>CameraController.sensitivityV</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sensitivityV</name>
    <token>public float sensitivityV </token>
    <scope>CameraController</scope>
  </CameraController.sensitivityV>
  <CameraController.cameraSpeed>
    <signature>CameraController.cameraSpeed</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>cameraSpeed</name>
    <token>public float cameraSpeed </token>
    <scope>CameraController</scope>
  </CameraController.cameraSpeed>
  <CameraController.sprintMultiplier>
    <signature>CameraController.sprintMultiplier</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>sprintMultiplier</name>
    <token>public float sprintMultiplier </token>
    <scope>CameraController</scope>
  </CameraController.sprintMultiplier>
  <ClickHandler>
    <signature>ClickHandler</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>ClickHandler</name>
    <token>public class ClickHandler : MonoBehaviour </token>
    <scope></scope>
  </ClickHandler>
  <DragObject>
    <signature>DragObject</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>DragObject</name>
    <token>public class DragObject : MonoBehaviour </token>
    <scope></scope>
  </DragObject>
  <EndDevice>
    <signature>EndDevice</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>EndDevice</name>
    <token>public class EndDevice : MonoBehaviour, IDevice </token>
    <scope></scope>
  </EndDevice>
  <EndDevice.ReceivePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
    <signature>EndDevice.ReceivePacket(NetInterface, Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReceivePacket</name>
    <token>public void ReceivePacket(NetInterface sourceInterface, Packet packet)</token>
    <scope>EndDevice</scope>
    <params>
      <sourceInterface>NetInterface</sourceInterface>
      <packet>Packet</packet>
    </params>
  </EndDevice.ReceivePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
  <EndDevice.SendPacket_x0028_Packet_x0029_>
    <signature>EndDevice.SendPacket(Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SendPacket</name>
    <token>public void SendPacket(Packet packet)</token>
    <scope>EndDevice</scope>
    <params>
      <packet>Packet</packet>
    </params>
  </EndDevice.SendPacket_x0028_Packet_x0029_>
  <PacketRacer>
    <signature>PacketRacer</signature>
    <childcount>10</childcount>
    <type>Namespace</type>
    <name>PacketRacer</name>
    <token>namespace PacketRacer</token>
    <scope></scope>
  </PacketRacer>
  <PacketRacer.IPv4Exception>
    <signature>PacketRacer.IPv4Exception</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>IPv4Exception</name>
    <token>public class IPv4Exception : Exception </token>
    <scope>PacketRacer</scope>
  </PacketRacer.IPv4Exception>
  <PacketRacer.IPv4Exception.IPv4Exception_x0028__x0029_>
    <signature>PacketRacer.IPv4Exception.IPv4Exception()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4Exception</name>
    <token>public  IPv4Exception()</token>
    <scope>PacketRacer.IPv4Exception</scope>
  </PacketRacer.IPv4Exception.IPv4Exception_x0028__x0029_>
  <PacketRacer.IPv4Exception.IPv4Exception_x0028_string_x0029_>
    <signature>PacketRacer.IPv4Exception.IPv4Exception(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4Exception</name>
    <token>public  IPv4Exception(string message): base(message)</token>
    <scope>PacketRacer.IPv4Exception</scope>
    <params>
      <message>string</message>
    </params>
  </PacketRacer.IPv4Exception.IPv4Exception_x0028_string_x0029_>
  <PacketRacer.IPv4Exception.IPv4Exception_x0028_string_x002C__x0020_Exception_x0029_>
    <signature>PacketRacer.IPv4Exception.IPv4Exception(string, Exception)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4Exception</name>
    <token>public  IPv4Exception(string message, Exception inner): base(message, inner)</token>
    <scope>PacketRacer.IPv4Exception</scope>
    <params>
      <message>string</message>
      <inner>Exception</inner>
    </params>
  </PacketRacer.IPv4Exception.IPv4Exception_x0028_string_x002C__x0020_Exception_x0029_>
  <PacketRacer.IPv4InterfaceException>
    <signature>PacketRacer.IPv4InterfaceException</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>IPv4InterfaceException</name>
    <token>public class IPv4InterfaceException : Exception </token>
    <scope>PacketRacer</scope>
  </PacketRacer.IPv4InterfaceException>
  <PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028__x0029_>
    <signature>PacketRacer.IPv4InterfaceException.IPv4InterfaceException()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4InterfaceException</name>
    <token>public  IPv4InterfaceException()</token>
    <scope>PacketRacer.IPv4InterfaceException</scope>
  </PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028__x0029_>
  <PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028_string_x0029_>
    <signature>PacketRacer.IPv4InterfaceException.IPv4InterfaceException(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4InterfaceException</name>
    <token>public  IPv4InterfaceException(string message): base(message)</token>
    <scope>PacketRacer.IPv4InterfaceException</scope>
    <params>
      <message>string</message>
    </params>
  </PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028_string_x0029_>
  <PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028_string_x002C__x0020_Exception_x0029_>
    <signature>PacketRacer.IPv4InterfaceException.IPv4InterfaceException(string, Exception)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4InterfaceException</name>
    <token>public  IPv4InterfaceException(string message, Exception inner): base(message, inner)</token>
    <scope>PacketRacer.IPv4InterfaceException</scope>
    <params>
      <message>string</message>
      <inner>Exception</inner>
    </params>
  </PacketRacer.IPv4InterfaceException.IPv4InterfaceException_x0028_string_x002C__x0020_Exception_x0029_>
  <PacketRacer.IDevice>
    <signature>PacketRacer.IDevice</signature>
    <childcount>2</childcount>
    <type>Interface</type>
    <name>IDevice</name>
    <token>public interface IDevice </token>
    <scope>PacketRacer</scope>
  </PacketRacer.IDevice>
  <PacketRacer.NetInterface>
    <signature>PacketRacer.NetInterface</signature>
    <childcount>18</childcount>
    <type>Class</type>
    <name>NetInterface</name>
    <token>public class NetInterface </token>
    <scope>PacketRacer</scope>
  </PacketRacer.NetInterface>
  <PacketRacer.NetInterface.parentDevice>
    <signature>PacketRacer.NetInterface.parentDevice</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>parentDevice</name>
    <token>public IDevice parentDevice </token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.parentDevice>
  <PacketRacer.NetInterface.ready>
    <signature>PacketRacer.NetInterface.ready</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>ready</name>
    <token>public bool ready </token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.ready>
  <PacketRacer.NetInterface.NetInterface_x0028_IDevice_x002C__x0020_int_x002C__x0020_string_x0029_>
    <signature>PacketRacer.NetInterface.NetInterface(IDevice, int, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>NetInterface</name>
    <token>public  NetInterface(IDevice device, int intNum, string intType = "g")</token>
    <scope>PacketRacer.NetInterface</scope>
    <params>
      <device>IDevice</device>
      <intNum>int</intNum>
      <intType>string</intType>
    </params>
  </PacketRacer.NetInterface.NetInterface_x0028_IDevice_x002C__x0020_int_x002C__x0020_string_x0029_>
  <PacketRacer.NetInterface.Ready_x0028__x0029_>
    <signature>PacketRacer.NetInterface.Ready()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Ready</name>
    <token>public void Ready()</token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.Ready_x0028__x0029_>
  <PacketRacer.NetInterface.CableConnected_x0028_Cable_x0029_>
    <signature>PacketRacer.NetInterface.CableConnected(Cable)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CableConnected</name>
    <token>public void CableConnected(Cable newCable)</token>
    <scope>PacketRacer.NetInterface</scope>
    <comments>
      <summary>Cable initiated to connect</summary>
      <param-newCable>Cable calling the connection</param-newCable>
    </comments>
    <params>
      <newCable>Cable</newCable>
    </params>
  </PacketRacer.NetInterface.CableConnected_x0028_Cable_x0029_>
  <PacketRacer.NetInterface.CableDisconnected_x0028__x0029_>
    <signature>PacketRacer.NetInterface.CableDisconnected()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>CableDisconnected</name>
    <token>public void CableDisconnected()</token>
    <scope>PacketRacer.NetInterface</scope>
    <comments>
      <summary>Cable initiated to disconnect</summary>
      <param-newCable>Cable calling the disconnection</param-newCable>
    </comments>
  </PacketRacer.NetInterface.CableDisconnected_x0028__x0029_>
  <PacketRacer.NetInterface.GetName_x0028__x0029_>
    <signature>PacketRacer.NetInterface.GetName()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetName</name>
    <token>public string GetName()</token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.GetName_x0028__x0029_>
  <PacketRacer.NetInterface.GetState_x0028__x0029_>
    <signature>PacketRacer.NetInterface.GetState()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetState</name>
    <token>public bool GetState()</token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.GetState_x0028__x0029_>
  <PacketRacer.NetInterface.GetIPAddress_x0028__x0029_>
    <signature>PacketRacer.NetInterface.GetIPAddress()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetIPAddress</name>
    <token>public IPv4Address GetIPAddress()</token>
    <scope>PacketRacer.NetInterface</scope>
  </PacketRacer.NetInterface.GetIPAddress_x0028__x0029_>
  <PacketRacer.NetInterface.SetIPAddress_x0028_string_x0029_>
    <signature>PacketRacer.NetInterface.SetIPAddress(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetIPAddress</name>
    <token>public void SetIPAddress(string ip)</token>
    <scope>PacketRacer.NetInterface</scope>
    <params>
      <ip>string</ip>
    </params>
  </PacketRacer.NetInterface.SetIPAddress_x0028_string_x0029_>
  <PacketRacer.NetInterface.SendPacket_x0028_Packet_x0029_>
    <signature>PacketRacer.NetInterface.SendPacket(Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SendPacket</name>
    <token>public void SendPacket(Packet packet)</token>
    <scope>PacketRacer.NetInterface</scope>
    <params>
      <packet>Packet</packet>
    </params>
  </PacketRacer.NetInterface.SendPacket_x0028_Packet_x0029_>
  <PacketRacer.NetInterface.ReceivePacket_x0028_Packet_x0029_>
    <signature>PacketRacer.NetInterface.ReceivePacket(Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReceivePacket</name>
    <token>public void ReceivePacket(Packet packet)</token>
    <scope>PacketRacer.NetInterface</scope>
    <params>
      <packet>Packet</packet>
    </params>
  </PacketRacer.NetInterface.ReceivePacket_x0028_Packet_x0029_>
  <PacketRacer.IPv4InterfacePair>
    <signature>PacketRacer.IPv4InterfacePair</signature>
    <childcount>3</childcount>
    <type>Struct</type>
    <name>IPv4InterfacePair</name>
    <token>public struct IPv4InterfacePair </token>
    <scope>PacketRacer</scope>
  </PacketRacer.IPv4InterfacePair>
  <PacketRacer.IPv4InterfacePair.network>
    <signature>PacketRacer.IPv4InterfacePair.network</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>network</name>
    <token>public IPv4Address network </token>
    <scope>PacketRacer.IPv4InterfacePair</scope>
  </PacketRacer.IPv4InterfacePair.network>
  <PacketRacer.IPv4InterfacePair.netMask>
    <signature>PacketRacer.IPv4InterfacePair.netMask</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>netMask</name>
    <token>public IPv4Address netMask </token>
    <scope>PacketRacer.IPv4InterfacePair</scope>
  </PacketRacer.IPv4InterfacePair.netMask>
  <PacketRacer.IPv4InterfacePair.interfaceName>
    <signature>PacketRacer.IPv4InterfacePair.interfaceName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>interfaceName</name>
    <token>public string interfaceName </token>
    <scope>PacketRacer.IPv4InterfacePair</scope>
  </PacketRacer.IPv4InterfacePair.interfaceName>
  <PacketRacer.IPv4Address>
    <signature>PacketRacer.IPv4Address</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>IPv4Address</name>
    <token>public class IPv4Address </token>
    <scope>PacketRacer</scope>
  </PacketRacer.IPv4Address>
  <PacketRacer.IPv4Address.IPv4Address_x0028_byte_x005B__x005D__x0029_>
    <signature>PacketRacer.IPv4Address.IPv4Address(byte[])</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4Address</name>
    <token>public  IPv4Address(byte[] ip_octets)</token>
    <scope>PacketRacer.IPv4Address</scope>
    <params>
      <ip_octets>byte[]</ip_octets>
    </params>
  </PacketRacer.IPv4Address.IPv4Address_x0028_byte_x005B__x005D__x0029_>
  <PacketRacer.IPv4Address.IPv4Address_x0028_string_x0029_>
    <signature>PacketRacer.IPv4Address.IPv4Address(string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>IPv4Address</name>
    <token>public  IPv4Address(string ipv4)</token>
    <scope>PacketRacer.IPv4Address</scope>
    <params>
      <ipv4>string</ipv4>
    </params>
  </PacketRacer.IPv4Address.IPv4Address_x0028_string_x0029_>
  <PacketRacer.IPv4Address.ToString_x0028__x0029_>
    <signature>PacketRacer.IPv4Address.ToString()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ToString</name>
    <token>public override string ToString()</token>
    <scope>PacketRacer.IPv4Address</scope>
  </PacketRacer.IPv4Address.ToString_x0028__x0029_>
  <PacketRacer.IPv4Address.IPStringToOctets_x0028_string_x002C__x0020_char_x0029_>
    <signature>PacketRacer.IPv4Address.IPStringToOctets(string, char)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IPStringToOctets</name>
    <token>public static byte[] IPStringToOctets(string ipv4, char separator = '.')</token>
    <scope>PacketRacer.IPv4Address</scope>
    <params>
      <ipv4>string</ipv4>
      <separator>char</separator>
    </params>
  </PacketRacer.IPv4Address.IPStringToOctets_x0028_string_x002C__x0020_char_x0029_>
  <PacketRacer.MACAddress>
    <signature>PacketRacer.MACAddress</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>MACAddress</name>
    <token>public class MACAddress </token>
    <scope>PacketRacer</scope>
  </PacketRacer.MACAddress>
  <PacketRacer.MACAddress.MACAddress_x0028__x0029_>
    <signature>PacketRacer.MACAddress.MACAddress()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>MACAddress</name>
    <token>public  MACAddress()</token>
    <scope>PacketRacer.MACAddress</scope>
  </PacketRacer.MACAddress.MACAddress_x0028__x0029_>
  <PacketRacer.Packet>
    <signature>PacketRacer.Packet</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>Packet</name>
    <token>public class Packet </token>
    <scope>PacketRacer</scope>
  </PacketRacer.Packet>
  <PacketRacer.Packet.source_ipv4>
    <signature>PacketRacer.Packet.source_ipv4</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>source_ipv4</name>
    <token>public IPv4Address source_ipv4 </token>
    <scope>PacketRacer.Packet</scope>
  </PacketRacer.Packet.source_ipv4>
  <PacketRacer.Packet.dest_ipv4>
    <signature>PacketRacer.Packet.dest_ipv4</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>dest_ipv4</name>
    <token>public IPv4Address dest_ipv4 </token>
    <scope>PacketRacer.Packet</scope>
  </PacketRacer.Packet.dest_ipv4>
  <PacketRacer.Packet.message>
    <signature>PacketRacer.Packet.message</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>message</name>
    <token>public string message </token>
    <scope>PacketRacer.Packet</scope>
  </PacketRacer.Packet.message>
  <PacketRacer.Packet.Packet_x0028__x0029_>
    <signature>PacketRacer.Packet.Packet()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Packet</name>
    <token>public  Packet()</token>
    <scope>PacketRacer.Packet</scope>
  </PacketRacer.Packet.Packet_x0028__x0029_>
  <PacketRacer.Packet.Packet_x0028_string_x002C__x0020_string_x002C__x0020_string_x0029_>
    <signature>PacketRacer.Packet.Packet(string, string, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Packet</name>
    <token>public  Packet(string source_ip, string dest_ip, string packetMessage = "ping")</token>
    <scope>PacketRacer.Packet</scope>
    <params>
      <source_ip>string</source_ip>
      <dest_ip>string</dest_ip>
      <packetMessage>string</packetMessage>
    </params>
  </PacketRacer.Packet.Packet_x0028_string_x002C__x0020_string_x002C__x0020_string_x0029_>
  <PacketRacer.Packet.Packet_x0028_IPv4Address_x002C__x0020_IPv4Address_x002C__x0020_string_x0029_>
    <signature>PacketRacer.Packet.Packet(IPv4Address, IPv4Address, string)</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>Packet</name>
    <token>public  Packet(IPv4Address source_ip, IPv4Address dest_ip, string packetMessage = "ping")</token>
    <scope>PacketRacer.Packet</scope>
    <params>
      <source_ip>IPv4Address</source_ip>
      <dest_ip>IPv4Address</dest_ip>
      <packetMessage>string</packetMessage>
    </params>
  </PacketRacer.Packet.Packet_x0028_IPv4Address_x002C__x0020_IPv4Address_x002C__x0020_string_x0029_>
  <PacketRacer.Tools>
    <signature>PacketRacer.Tools</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>Tools</name>
    <token>public static class Tools </token>
    <scope>PacketRacer</scope>
  </PacketRacer.Tools>
  <PacketRacer.Tools.selectedTool>
    <signature>PacketRacer.Tools.selectedTool</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>selectedTool</name>
    <token>public static int selectedTool </token>
    <scope>PacketRacer.Tools</scope>
  </PacketRacer.Tools.selectedTool>
  <PacketRacer.ToolSelectDropdown>
    <signature>PacketRacer.ToolSelectDropdown</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>ToolSelectDropdown</name>
    <token>public class ToolSelectDropdown : MonoBehaviour </token>
    <scope>PacketRacer</scope>
  </PacketRacer.ToolSelectDropdown>
  <PacketRacer.ToolSelectDropdown.dropdown>
    <signature>PacketRacer.ToolSelectDropdown.dropdown</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>dropdown</name>
    <token>public TMP_Dropdown dropdown </token>
    <scope>PacketRacer.ToolSelectDropdown</scope>
  </PacketRacer.ToolSelectDropdown.dropdown>
  <PacketRacer.ToolSelectDropdown.Dropdown_IndexChanged_x0028_int_x0029_>
    <signature>PacketRacer.ToolSelectDropdown.Dropdown_IndexChanged(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Dropdown_IndexChanged</name>
    <token>public void Dropdown_IndexChanged(int index)</token>
    <scope>PacketRacer.ToolSelectDropdown</scope>
    <params>
      <index>int</index>
    </params>
  </PacketRacer.ToolSelectDropdown.Dropdown_IndexChanged_x0028_int_x0029_>
  <Router>
    <signature>Router</signature>
    <childcount>16</childcount>
    <type>Class</type>
    <name>Router</name>
    <token>public class Router : MonoBehaviour, IDevice </token>
    <scope></scope>
  </Router>
  <Router.labelName>
    <signature>Router.labelName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>labelName</name>
    <token>public TextMeshPro labelName </token>
    <scope>Router</scope>
  </Router.labelName>
  <Router.routingTableString>
    <signature>Router.routingTableString</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>routingTableString</name>
    <token>public List&lt;string&gt; routingTableString </token>
    <scope>Router</scope>
  </Router.routingTableString>
  <Router.displayName>
    <signature>Router.displayName</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>displayName</name>
    <token>public string displayName </token>
    <scope>Router</scope>
  </Router.displayName>
  <Router.interfaceIpList>
    <signature>Router.interfaceIpList</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>interfaceIpList</name>
    <token>public List&lt;string&gt; interfaceIpList </token>
    <scope>Router</scope>
  </Router.interfaceIpList>
  <Router.interfaceList>
    <signature>Router.interfaceList</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>interfaceList</name>
    <token>public List&lt;NetInterface&gt; interfaceList </token>
    <scope>Router</scope>
  </Router.interfaceList>
  <Router.ready>
    <signature>Router.ready</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>ready</name>
    <token>public bool ready </token>
    <scope>Router</scope>
  </Router.ready>
  <Router.Ready_x0028__x0029_>
    <signature>Router.Ready()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Ready</name>
    <token>public void Ready()</token>
    <scope>Router</scope>
    <comments>
      <summary>Done preparing the router</summary>
    </comments>
  </Router.Ready_x0028__x0029_>
  <Router.SetName_x0028_string_x0029_>
    <signature>Router.SetName(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetName</name>
    <token>public void SetName(string name)</token>
    <scope>Router</scope>
    <params>
      <name>string</name>
    </params>
  </Router.SetName_x0028_string_x0029_>
  <Router.SendPingPacket_x0028_string_x0029_>
    <signature>Router.SendPingPacket(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SendPingPacket</name>
    <token>public void SendPingPacket(string ip)</token>
    <scope>Router</scope>
    <params>
      <ip>string</ip>
    </params>
  </Router.SendPingPacket_x0028_string_x0029_>
  <Router.SendPacket_x0028_Packet_x0029_>
    <signature>Router.SendPacket(Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SendPacket</name>
    <token>public void SendPacket(Packet packet)</token>
    <scope>Router</scope>
    <params>
      <packet>Packet</packet>
    </params>
  </Router.SendPacket_x0028_Packet_x0029_>
  <Router.ReceivePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
    <signature>Router.ReceivePacket(NetInterface, Packet)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ReceivePacket</name>
    <token>public void ReceivePacket(NetInterface sourceInterface, Packet packet)</token>
    <scope>Router</scope>
    <params>
      <sourceInterface>NetInterface</sourceInterface>
      <packet>Packet</packet>
    </params>
  </Router.ReceivePacket_x0028_NetInterface_x002C__x0020_Packet_x0029_>
</members>